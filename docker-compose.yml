version: '3'
services:

  postgres:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - inomarka_network

  java-application:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://java-application:8080/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 100
    depends_on:
      - postgres
    networks:
      - inomarka_network

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      java-application:
        condition: service_healthy
    networks:
      - inomarka_network

  reversed-proxy:
    build:
      context: ./reversedproxy
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      java-application:
        condition: service_healthy
      front:
        condition: service_started
    networks:
      - inomarka_network

networks:
  inomarka_network: